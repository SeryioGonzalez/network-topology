{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
	"vnetId":         {"type": "string" },
	"subnetName_1":   {"type": "string" },
	"subnetName_2":   {"type": "string" },
    "vmSku": {
      "type": "string",
      "defaultValue": "Standard_D1_v2"
    },
    "vmssName": {
      "type": "string"
    },
    "instanceCount": {
      "type": "int",
      "maxValue": 100
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    }
  },
  "variables": {
	"natStartPort": 50000,
    "natEndPort": 50120,
    "natBackendPort": 22,
    "osType": {
      "publisher": "Canonical",
      "offer": "UbuntuServer",
      "sku": "16.04-LTS",
      "version": "latest"
    },
    "imageReference": "[variables('osType')]",

    "publicIPAddressName":     "[concat(parameters('vmssName'), 'pip')]",
    "publicIPAddressID":       "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
	"domainNameLabel":         "[concat(parameters('vmssName'), 'domain')]" ,
    "loadBalancerName":        "[concat(parameters('vmssName'), 'lb')]",
    "loadBalancer_Id":         "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
    "loadBalancerProbe":       "[concat(parameters('vmssName'), 'probe')]",
    "loadBalancerProbe_Id":    "[concat(variables('loadBalancer_Id'),'/probes/', variables('loadBalancerProbe'))]",
    "loadBalancerFrontEnd":    "[concat(parameters('vmssName'), 'frontEndIP')]",
    "loadBalancerFrontEnd_Id": "[concat(variables('loadBalancer_Id'),'/frontendIPConfigurations/', variables('loadBalancerFrontEnd'))]",
		
    "bePoolName_1":    "[concat(parameters('vmssName'), 'bePool_1')]", 
    "bePoolName_1_Id": "[concat(variables('loadBalancer_Id'),'/backendAddressPools/', variables('bePoolName_1'))]",	
    "bePoolName_2":    "[concat(parameters('vmssName'), 'bePool_2')]",  
    "bePoolName_2_Id": "[concat(variables('loadBalancer_Id'),'/backendAddressPools/', variables('bePoolName_2'))]",	
    "natPoolName_1": "[concat(parameters('vmssName'), 'natPool_1')]",
    "natPoolName_2": "[concat(parameters('vmssName'), 'natPool_2')]",
    "nicName_1": "[concat(parameters('vmssName'), 'nic_1')]",
    "nicName_2": "[concat(parameters('vmssName'), 'nic_2')]",
    "ipConfigName_1":  "[concat(parameters('vmssName'), 'ipconfig_1')]",
    "ipConfigName_2":  "[concat(parameters('vmssName'), 'ipconfig_2')]"

  },
  "resources": [

    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-04-01",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('domainNameLabel')]"
        }
      }
    },
	
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('loadBalancerName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-04-01",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('loadBalancerFrontEnd')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPAddressID')]"
              }
            }
          }
        ],
		"probes": [
			{
				"name": "[variables('loadBalancerProbe')]",
				"properties": {
					"protocol": "Tcp",
					"port": 80,
					"intervalInSeconds": 5,
					"numberOfProbes": 2
				}
			}
		],
		"loadBalancingRules": [
			{
				"name": "lb_pool1",
				"properties": {
					"frontendIPConfiguration": {
						"id": "[variables('loadBalancerFrontEnd_Id')]"
					},
					"frontendPort": 80,
					"backendPort": 80,
					"enableFloatingIP": false,
					"idleTimeoutInMinutes": 4,
					"protocol": "Tcp",
					"enableTcpReset": false,
					"loadDistribution": "Default",
					"backendAddressPool": {
						"id": "[variables('bePoolName_1_Id')]"
					},
					"probe": {
						"id": "[variables('loadBalancerProbe_Id')]"
					}
				}
			},
			{
				"name": "lb_pool2",
				"properties": {
					"frontendIPConfiguration": {
						"id": "[variables('loadBalancerFrontEnd_Id')]"
					},
					"frontendPort": 8080,
					"backendPort": 80,
					"enableFloatingIP": false,
					"idleTimeoutInMinutes": 4,
					"protocol": "Tcp",
					"enableTcpReset": false,
					"loadDistribution": "Default",
					"backendAddressPool": {
						"id": "[variables('bePoolName_2_Id')]"
					},
					"probe": {
						"id": "[variables('loadBalancerProbe_Id')]"
					}
				}
			}
		],

        "backendAddressPools": [
          {
            "name": "[variables('bePoolName_1')]"
          },
          {
            "name": "[variables('bePoolName_2')]"
          }
        ],
        "inboundNatPools": [
          {
            "name": "[variables('natPoolName_1')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('loadBalancerFrontEnd_Id')]"
              },
              "protocol": "tcp",
              "frontendPortRangeStart": "[variables('natStartPort')]",
              "frontendPortRangeEnd": "[variables('natEndPort')]",
              "backendPort": "[variables('natBackendPort')]"
            }
          },
          {
            "name": "[variables('natPoolName_2')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('loadBalancerFrontEnd_Id')]"
              },
              "protocol": "tcp",
              "frontendPortRangeStart": "6000",
              "frontendPortRangeEnd":   "6100",
              "backendPort": "[variables('natBackendPort')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[parameters('vmssName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-03-30",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
      ],
      "sku": {
        "name": "[parameters('vmSku')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "overprovision": "false",
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "caching": "ReadOnly",
              "createOption": "FromImage"
            },
            "imageReference": "[variables('imageReference')]"
          },
          "osProfile": {
            "computerNamePrefix": "[parameters('vmssName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('nicName_1')]",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "[variables('ipConfigName_1')]",
                      "properties": {
                        "subnet": {
                          "id": "[concat(parameters('vnetId'), '/subnets/', parameters('subnetName_1')) ]"                       
						},
                        "publicipaddressconfiguration": {
                          "name": "pub1",
                          "properties": {
                            "idleTimeoutInMinutes": 15
                          }
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName_1'))]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/', variables('natPoolName_1'))]"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "name": "[variables('nicName_2')]",
                "properties": {
                  "primary": false,
                  "ipConfigurations": [
                    {
                      "name": "[variables('ipConfigName_2')]",
                      "properties": {
                        "subnet": {
                          "id": "[concat(parameters('vnetId'), '/subnets/', parameters('subnetName_2')) ]"                       
						},
                        "publicipaddressconfiguration": {
                          "name": "pub2",
                          "properties": {
                            "idleTimeoutInMinutes": 15
                          }
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName_2'))]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/', variables('natPoolName_2'))]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    }
  ]
}